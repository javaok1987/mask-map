{"version":3,"sources":["components/map.js","components/drugstore-card.js","components/city-select.js","App.js","serviceWorker.js","index.js"],"names":["L","window","turf","getColor","d","onEachFeature","feature","layer","popupContent","properties","name","mask_adult","mask_child","bindPopup","Map","props","state","myPlace","markerPool","maskMap","countryLayer","countryName","this","markerClusterGroup","zoomToBoundsOnClick","removeOutsideVisibleBounds","center","latitude","longitude","map","zoom","layers","tileLayer","attribution","marker","addTo","locate","setView","maxZoom","on","e","setState","latlng","setLatLng","openPopup","legend","control","position","onAdd","div","DomUtil","create","grades","labels","i","length","push","innerHTML","join","getLegendControl","customAction","Toolbar2","Action","extend","options","toolbarIcon","html","tooltip","addHooks","flyTo","Control","actions","clearLayers","focus","_focus","LatLng","lat","lng","country","centerOfMass","centerLatLng","geometry","coordinates","geoJson","addData","markersData","ptsWithin","pointsWithinPolygon","geoJSON","style","color","pointToLayer","maskCount","circleMarker","radius","weight","opacity","fillOpacity","fillColor","getStyle","addLayer","id","React","Component","DrugdrugstoreCard","handleClick","drugstore","onClickDrugstore","lat1","lng1","lat2","lng2","radLat1","Math","PI","radLat2","a","b","s","asin","sqrt","pow","sin","cos","round","mask","total","percent","currentLocation","city","district","className","features","address","substring","Card","key","Content","onClick","Header","Meta","phone","Description","href","target","rel","custom_note","Message","size","Icon","extra","Progress","getPercent","indicating","SelectCountry","handleCity","value","onSelectCity","currentCity","CITY_AREA","find","item","index","array","districtOptions","districts","text","_district","onSelectDistrict","handleDistrict","cityOptions","Dropdown","button","floating","labeled","scrolling","icon","onChange","App","twCountyGJson","filter","county","handleClickDrugstore","viewport","drugstoreGJson","visible","showChild","fetch","then","response","json","geojson","screen","availWidth","document","body","classList","add","catch","err","console","log","Button","compact","labelPosition","toggleSidebar","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.991e8d42.chunk.js","sourcesContent":["import React from 'react';\n\n// Import CSS from Leaflet and plugins.\nimport 'leaflet.markercluster/dist/MarkerCluster.css';\nimport 'leaflet.markercluster/dist/MarkerCluster.Default.css';\nimport 'leaflet-toolbar/dist/leaflet.toolbar.css';\n\n// Import JS from Leaflet and plugins.\nimport 'leaflet.markercluster';\nimport 'leaflet-toolbar';\n\nimport '../styles/map.scss';\n\nconst L = window.L;\nconst turf = window.turf;\n\nconst getColor = d => {\n  return d > 480 ? '#7cafc2' : d > 360 ? '#86c1b9' : d > 240 ? '#a1b56c' : d > 120 ? '#f7ca88' : d > 0 ? '#dc9656' : 'rgba(236,222,239,.9)';\n};\n\nconst getStyle = maskCount => {\n  return {\n    radius: 10,\n    weight: 1,\n    opacity: 1,\n    fillOpacity: 1,\n    fillColor: getColor(maskCount)\n  };\n};\n\nconst getLegendControl = () => {\n  //Custom Legend Control.\n  const legend = L.control({ position: 'bottomright' });\n  legend.onAdd = () => {\n    const div = L.DomUtil.create('div', 'legend-panel');\n    const grades = [0, 120, 240, 360, 480];\n    const labels = [];\n\n    for (let i = 0; i < grades.length; i++) {\n      labels.push(`\n        <div class=\"legend-item\">\n          <i style=\"background:${getColor(grades[i] + 1)}\"></i>${grades[i]} ↑\n        </div>\n      `);\n    }\n    div.innerHTML = labels.join('');\n    return div;\n  };\n  return legend;\n};\n\nconst onEachFeature = (feature, layer) => {\n  const popupContent = `\n      <div class=\"info-window\">\n        <h3>${layer.feature.properties.name}</h3>\n        <p>成人口罩\b：${feature.properties.mask_adult} 個</p>\n        <p>兒童口罩：${feature.properties.mask_child} 個</p>\n      </div>\n    `;\n  layer.bindPopup(popupContent);\n};\n\nexport default class Map extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      myPlace: null,\n      markerPool: null,\n      maskMap: null,\n      // mapLayer:null,\n      countryLayer: null,\n      countryName: ''\n    };\n  }\n\n  componentDidMount() {\n    this.markerPool = L.markerClusterGroup({\n      zoomToBoundsOnClick: true,\n      removeOutsideVisibleBounds: true\n    });\n\n    const center = [this.props.latitude, this.props.longitude];\n    // Create map.\n    this.maskMap = L.map('map-canvas', {\n      center,\n      zoom: 12,\n      layers: [\n        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {\n          attribution: '&amp;copy <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        })\n      ]\n    });\n\n    this.marker = L.marker(center).addTo(this.maskMap);\n\n    // Geolocation.\n    this.maskMap.locate({ setView: true, maxZoom: 11 });\n    this.maskMap.on('locationfound', e => {\n      this.setState({ myPlace: e.latlng });\n      // Add marker.\n      this.marker\n        .setLatLng(this.state.myPlace)\n        .bindPopup('You are here!')\n        .openPopup();\n    });\n\n    const legend = getLegendControl();\n    legend.addTo(this.maskMap);\n\n    // ToolBar.\n    const customAction = L.Toolbar2.Action.extend({\n      options: {\n        toolbarIcon: {\n          html: '<div><i aria-hidden=\"true\" class=\"crosshairs small icon\"></i></div>',\n          tooltip: 'Go to the Eiffel Tower'\n        }\n      },\n      addHooks: () => {\n        if (this.state.myPlace) {\n          this.marker\n            .setLatLng(this.state.myPlace)\n            .bindPopup('You are here!')\n            .openPopup();\n          this.maskMap.flyTo(this.state.myPlace, 17);\n        }\n      }\n    });\n    new L.Toolbar2.Control({\n      actions: [customAction]\n    }).addTo(this.maskMap);\n  }\n\n  componentDidUpdate() {\n    this.markerPool.clearLayers();\n\n    if (this.props.focus) {\n      const _focus = new L.LatLng(this.props.focus[1], this.props.focus[0]);\n      this.marker\n        .setLatLng(_focus)\n        .bindPopup(\n          this.state.myPlace\n            ? `<a href=\"https://www.google.com.tw/maps/dir/${this.state.myPlace.lat},${this.state.myPlace.lng}/${this.props.focus[1]},${this.props.focus[0]}\" target=\"_blank\" rel=\"noopener noreferrer\">前往藥局</a>`\n            : `<a href=https://www.google.com.tw/maps/place/${this.props.focus[1]},${this.props.focus[0]} target=\"_blank\" rel=\"noopener noreferrer\">前往藥局</a>`\n        )\n        .openPopup();\n      this.maskMap.flyTo(_focus, 17);\n    }\n\n    if (this.props.layer && this.props.layer.length === 1) {\n      const country = this.props.layer[0];\n\n      // 相同縣市不清除.\n      if (country.properties.name !== this.countryName) {\n        if (this.countryLayer) this.countryLayer.clearLayers();\n\n        const center = turf.centerOfMass(country);\n        const centerLatLng = new L.LatLng(center.geometry.coordinates[1], center.geometry.coordinates[0]);\n\n        this.countryLayer = L.geoJson(null)\n          .addData(this.props.layer)\n          .addTo(this.maskMap);\n\n        this.countryName = country.properties.name;\n\n        this.marker\n          .setLatLng(centerLatLng)\n          .bindPopup(this.countryName)\n          .openPopup();\n\n        this.maskMap.flyTo(centerLatLng, 10);\n      }\n\n      if (!this.props.markersData) return false;\n\n      const ptsWithin = turf.pointsWithinPolygon(this.props.markersData, this.props.layer[0]);\n      if (ptsWithin) {\n        L.geoJSON(ptsWithin, {\n          style: function(feature) {\n            return { color: feature.properties.color };\n          },\n          onEachFeature,\n          pointToLayer: (feature, latlng) => {\n            const maskCount = feature.properties.mask_adult;\n            const marker = L.circleMarker(latlng, getStyle(maskCount));\n            this.markerPool.addLayer(marker);\n            return marker;\n          }\n        });\n        this.maskMap.addLayer(this.markerPool);\n      }\n    }\n  }\n\n  render() {\n    return <div id=\"map-canvas\"></div>;\n  }\n}\n","import React from 'react';\nimport { Card, Progress, Message, Icon } from 'semantic-ui-react';\n\nexport default class DrugdrugstoreCard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n\n  /**\n   * 計算兩個坐標點之間的距離\n   * @param {*} lat1\n   * @param {*} lng1\n   * @param {*} lat2\n   * @param {*} lng2\n   */\n  getDistance(lat1, lng1, lat2, lng2) {\n    const radLat1 = (lat1 * Math.PI) / 180.0;\n    const radLat2 = (lat2 * Math.PI) / 180.0;\n    const a = radLat1 - radLat2;\n    const b = (lng1 * Math.PI) / 180.0 - (lng2 * Math.PI) / 180.0;\n    let s = 2 * Math.asin(Math.sqrt(Math.pow(Math.sin(a / 2), 2) + Math.cos(radLat1) * Math.cos(radLat2) * Math.pow(Math.sin(b / 2), 2)));\n    s = s * 6378.137; // EARTH_RADIUS;\n    s = Math.round(s * 10000) / 10000;\n    return s;\n  }\n\n  getPercent(mask, total) {\n    let percent = mask / total;\n    return percent > 1 ? 100 : percent * 100;\n  }\n\n  handleClick = drugstore => {\n    this.props.onClickDrugstore(drugstore);\n  };\n\n  render() {\n    const currentLocation = `${this.props.city}${this.props.district}`;\n\n    return (\n      <div className=\"floating-panel__list\">\n        {this.props.markersData &&\n          this.props.markersData.features.map(drugstore => {\n            return drugstore.properties.address.substring(0, currentLocation.length) === currentLocation ? ( // 縣市區域過濾.\n              <Card key={drugstore.properties.id} className={drugstore.properties.mask_adult === 0 ? 'is-disable' : ''}>\n                <Card.Content onClick={() => this.handleClick(drugstore.geometry)}>\n                  <Card.Header>{drugstore.properties.name}</Card.Header>\n                  <Card.Meta>{drugstore.properties.phone}</Card.Meta>\n                  <Card.Description>\n                    {drugstore.properties.address}\n                    <a href={`https://www.google.com.tw/maps/place/${drugstore.properties.address}`} target=\"_blank\" rel=\"noopener noreferrer\">\n                      {' '}\n                      MAP\n                    </a>\n                    <br />\n                    {drugstore.properties.custom_note === '' ? null : (\n                      <Message size=\"tiny\">\n                        <Icon name=\"bullhorn\" />\n                        {drugstore.properties.custom_note}\n                      </Message>\n                    )}\n                  </Card.Description>\n                </Card.Content>\n                <Card.Content extra>\n                  <Progress percent={this.getPercent(drugstore.properties.mask_adult, 600)} indicating>\n                    成人:{drugstore.properties.mask_adult}\n                  </Progress>\n                  <Progress percent={this.getPercent(drugstore.properties.mask_child, 200)} indicating>\n                    兒童:{drugstore.properties.mask_child}\n                  </Progress>\n                </Card.Content>\n              </Card>\n            ) : null;\n          })}\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { Dropdown } from 'semantic-ui-react';\n\nimport CITY_AREA from '../data/city-area.json';\n\nexport default class SelectCountry extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      cityOptions: CITY_AREA.map(item => ({\n        key: item.id,\n        text: item.name,\n        value: item.name\n      })),\n      districtOptions: [\n        { key: 15, text: '板橋區', value: '板橋區' },\n        { key: 28, text: '土城區', value: '土城區' },\n        { key: 23, text: '新店區', value: '新店區' },\n        { key: 26, text: '永和區', value: '永和區' },\n        { key: 27, text: '中和區', value: '中和區' }\n      ],\n      city: '新北市',\n      district: '土城區'\n    };\n  }\n\n  handleCity = (e, { value }) => {\n    this.props.onSelectCity(value);\n\n    const currentCity = CITY_AREA.find(function(item, index, array) {\n      return item.name === value;\n    });\n    this.setState({\n      city: value,\n      districtOptions: currentCity.districts.map(item => ({\n        key: item.id,\n        text: item.name,\n        value: item.name\n      }))\n    });\n\n    if (currentCity.districts && currentCity.districts.length > 1) {\n      const _district = currentCity.districts[0].name;\n      this.setState({\n        district: _district\n      });\n      this.props.onSelectDistrict(_district);\n    }\n  };\n\n  handleDistrict = (e, { value }) => {\n    this.setState({\n      district: value\n    });\n    this.props.onSelectDistrict(value);\n  };\n\n  render() {\n    const { cityOptions, districtOptions, city, district } = this.state;\n\n    return (\n      <div>\n        <Dropdown\n          button\n          className=\"icon teal\"\n          floating\n          labeled\n          scrolling\n          icon=\"filter\"\n          options={cityOptions}\n          onChange={this.handleCity}\n          text={city}\n        />\n        <Dropdown\n          button\n          className=\"icon teal\"\n          floating\n          labeled\n          scrolling\n          icon=\"filter\"\n          options={districtOptions}\n          onChange={this.handleDistrict}\n          text={district}\n        />\n      </div>\n    );\n  }\n}\n","import React from 'react';\n\nimport MaskMap from './components/map';\nimport DrugstoreCard from './components/drugstore-card';\nimport CitySelect from './components/city-select';\n\nimport { Button, Icon } from 'semantic-ui-react';\n\nimport 'normalize.css';\nimport './App.css';\n\nexport default class App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      viewport: {\n        latitude: 25.030313,\n        longitude: 121.54924,\n        zoom: 16\n      },\n      drugstoreGJson: null,\n      twCountyGJson: null,\n      layer: null,\n      focus: null,\n      visible: true,\n      showChild: false,\n      city: '新北市',\n      district: '土城區'\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://raw.githubusercontent.com/kiang/pharmacies/master/json/points.json')\n      .then(response => response.json())\n      .then(geojson => {\n        this.setState({ drugstoreGJson: geojson });\n        if (('availWidth', window.screen.availWidth <= 768)) this.setState({ visible: false });\n        document.body.classList.add('dom-ready');\n      })\n      .catch(err => {\n        console.log('錯誤:', err);\n      });\n\n    fetch('https://raw.githubusercontent.com/javaok1987/mask-map/master/src/data/tw-county.geojson')\n      .then(response => response.json())\n      .then(geojson => {\n        this.setState({ twCountyGJson: geojson });\n        this.setState({\n          layer: this.state.twCountyGJson['features'].filter(county => {\n            return county.properties.name === this.state.city;\n          })\n        });\n      })\n      .catch(err => {\n        console.log('錯誤:', err);\n      });\n  }\n\n  toggleSidebar(visible) {\n    this.setState({ visible: !visible });\n  }\n\n  handleCity = city => {\n    this.setState({\n      city,\n      focus: null,\n      layer: this.state.twCountyGJson['features'].filter(county => {\n        return county.properties.name === city;\n      })\n    });\n  };\n\n  handleDistrict = district => {\n    this.setState({ focus: null, district });\n  };\n\n  handleClickDrugstore = drugstore => {\n    this.setState({\n      focus: drugstore.coordinates\n    });\n  };\n\n  render() {\n    const { viewport, drugstoreGJson, city, district, focus, layer } = this.state;\n\n    return (\n      <div className=\"app\">\n        <MaskMap {...viewport} markersData={drugstoreGJson} layer={layer} focus={focus}></MaskMap>\n        <div className={this.state.visible ? 'floating-panel is-visible' : 'floating-panel'}>\n          <div className=\"floating-panel__header\">\n            <h3>口罩地圖 MASK MAP</h3>\n            <CitySelect onSelectCity={this.handleCity} onSelectDistrict={this.handleDistrict}></CitySelect>\n          </div>\n          <DrugstoreCard markersData={drugstoreGJson} city={city} district={district} onClickDrugstore={this.handleClickDrugstore}></DrugstoreCard>\n          <Button icon compact color=\"teal\" labelPosition=\"right\" className=\"floating-panel__close\" onClick={() => this.toggleSidebar(this.state.visible)}>\n            關閉\n            <Icon name={this.state.visible ? 'angle double left' : 'angle double right'} />\n          </Button>\n        </div>\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}